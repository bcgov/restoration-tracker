name: Linting Checks

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  lint:
    name: Running Linter
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Cache database node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-database-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('database/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install database dependencies
        working-directory: database
        run: npm install

      - name: Run database linter
        working-directory: database
        run: CI=true npm run lint

      - name: Cache api node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-api-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('api/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install api dependencies
        working-directory: api
        run: npm install

      - name: Run api linter
        working-directory: api
        run: CI=true npm run lint

      - name: Cache app node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-app-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Install app dependencies
        working-directory: app
        run: npm install

      - name: Run app linter
        working-directory: app
        run: CI=true npm run lint
