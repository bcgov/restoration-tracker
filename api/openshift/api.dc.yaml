apiVersion: v1
kind: Template
metadata:
  resourceVersion: ''
  selfLink: ''
  name: restoration-tracker-api-dc
parameters:
  - name: ENABLE_FILE_VIRUS_SCAN
    value: 'true'
  - name: NAME
    value: restoration-tracker-api
  - name: SUFFIX
    value: '-dev'
  - name: VERSION
    description: Version of the application
    value: '1.0.0'
  - name: HOST
    description: Host name of the application
    required: true
  - name: CHANGE_ID
    description: Change id of the project. This will help to pull image stream
    required: true
    value: '0'
  - name: DB_SERVICE_NAME
    description: 'Database service name associated with deployment'
    required: true
  - name: NODE_ENV
    description: Application Environment type variable
    required: true
    value: 'dev'
  - name: ELASTICSEARCH_URL
    description: Platform Elasticsearch URL
    required: true
    value: 'hardcoded for now'
  - name: TZ
    description: Application timezone
    required: false
    value: 'America/Vancouver'
  - name: KEYCLOAK_HOST
    description: Key clock login url
    value: 'https://oidc.gov.bc.ca/auth'
    required: true
  - name: KEYCLOAK_REALM
    description: Realm identifier or name
    value: '35r1iman'
    required: true
  - name: KEYCLOAK_CLIENT_ID
    description: Client Id for application
    value: 'restoration'
    required: true
  - name: API_PORT_DEFAULT
    value: '6100'
  - name: API_PORT_DEFAULT_NAME
    description: Api default port name
    value: '6100-tcp'
  - name: OBJECT_STORE_SECRETS
    description: Secrets used to read and write to the S3 storage
    value: 'biohubbc-object-store'
  - name: LOG_LEVEL
    value: 'info'
  - name: CPU_REQUEST
    value: '10m'
  - name: CPU_LIMIT
    value: '200m'
  - name: MEMORY_REQUEST
    value: '512Mi'
  - name: MEMORY_LIMIT
    value: '2Gi'
  - name: REPLICAS
    value: '1'
  - name: REPLICA_MAX
    required: true
    value: '1'
objects:
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      annotations:
        description: Nodejs Runtime Image
      labels:
        shared: 'true'
      creationTimestamp: null
      generation: 0
      name: ${NAME}
    spec:
      lookupPolicy:
        local: false
    status:
      dockerImageRepository: null
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      generation: 0
      labels:
        role: api
      name: ${NAME}${SUFFIX}
    spec:
      replicas: '${{REPLICAS}}'
      revisionHistoryLimit: 10
      selector:
        deploymentConfig: ${NAME}${SUFFIX}
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources:
          limits:
            cpu: ${CPU_LIMIT}
            memory: ${MEMORY_LIMIT}
          requests:
            cpu: ${CPU_REQUEST}
            memory: ${MEMORY_REQUEST}
        type: Rolling
      template:
        metadata:
          annotations: null
          creationTimestamp: null
          labels:
            deploymentConfig: ${NAME}${SUFFIX}
            role: api
        spec:
          containers:
            - env:
                - name: API_HOST
                  value: ${HOST}
                - name: API_PORT
                  value: ${API_PORT_DEFAULT}
                - name: ENABLE_FILE_VIRUS_SCAN
                  value: ${ENABLE_FILE_VIRUS_SCAN}
                - name: DB_HOST
                  value: ${DB_SERVICE_NAME}
                - name: DB_USER_API
                  valueFrom:
                    secretKeyRef:
                      key: database-user-api
                      name: ${DB_SERVICE_NAME}
                - name: DB_USER_API_PASS
                  valueFrom:
                    secretKeyRef:
                      key: database-user-api-password
                      name: ${DB_SERVICE_NAME}
                - name: DB_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${DB_SERVICE_NAME}
                - name: DB_PORT
                  value: '5432'
                - name: KEYCLOAK_HOST
                  value: ${KEYCLOAK_HOST}
                - name: KEYCLOAK_CLIENT_ID
                  value: ${KEYCLOAK_CLIENT_ID}
                - name: KEYCLOAK_REALM
                  value: ${KEYCLOAK_REALM}
                - name: CHANGE_VERSION
                  value: ${CHANGE_ID}
                - name: NODE_ENV
                  value: ${NODE_ENV}
                - name: ELASTICSEARCH_URL
                  value: 'http://es01.af2668-dev:9200'
                - name: TZ
                  value: ${TZ}
                - name: VERSION
                  value: ${VERSION}
                - name: OBJECT_STORE_URL
                  valueFrom:
                    secretKeyRef:
                      key: object_store_url
                      name: ${OBJECT_STORE_SECRETS}
                - name: OBJECT_STORE_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      key: object_store_access_key_id
                      name: ${OBJECT_STORE_SECRETS}
                - name: OBJECT_STORE_SECRET_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      key: object_store_secret_key_id
                      name: ${OBJECT_STORE_SECRETS}
                - name: OBJECT_STORE_BUCKET_NAME
                  valueFrom:
                    secretKeyRef:
                      key: object_store_bucket_name
                      name: ${OBJECT_STORE_SECRETS}
                - name: LOG_LEVEL
                  value: ${LOG_LEVEL}
              image: ' '
              imagePullPolicy: Always
              name: api
              ports:
                - containerPort: ${{API_PORT_DEFAULT}}
                  protocol: TCP
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              readinessProbe:
                failureThreshold: 50
                httpGet:
                  path: /api/version
                  port: ${{API_PORT_DEFAULT}}
                  scheme: HTTP
                initialDelaySeconds: 50
                periodSeconds: 15
                successThreshold: 1
                timeoutSeconds: 20
              livenessProbe:
                failureThreshold: 50
                httpGet:
                  path: /api/version
                  port: ${{API_PORT_DEFAULT}}
                  scheme: HTTP
                initialDelaySeconds: 80
                periodSeconds: 15
                successThreshold: 1
                timeoutSeconds: 20
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/app-root/app
                  name: ${NAME}${SUFFIX}
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - emptyDir: {}
              name: ${NAME}${SUFFIX}
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - api
            from:
              kind: ImageStreamTag
              name: ${NAME}:${VERSION}
          type: ImageChange
        - type: ConfigChange
    status:
      availableReplicas: 0
      latestVersion: 0
      observedGeneration: 0
      replicas: 0
      unavailableReplicas: 0
      updatedReplicas: 0
  - apiVersion: v1
    stringData:
      database-name: ''
      database-user-api-password: ''
      database-user-api: ''
    kind: Secret
    metadata:
      annotations:
        as-copy-of: ${DB_SERVICE_NAME}
      creationTimestamp: null
      name: ${NAME}${SUFFIX}
    type: Opaque
  - apiVersion: v1
    kind: Service
    metadata:
      annotations: null
      creationTimestamp: null
      labels: {}
      name: ${NAME}${SUFFIX}
    spec:
      ports:
        - name: ${NAME}-${API_PORT_DEFAULT_NAME}
          port: ${{API_PORT_DEFAULT}}
          protocol: TCP
          targetPort: ${{API_PORT_DEFAULT}}
      selector:
        deploymentconfig: ${NAME}${SUFFIX}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      annotations: {}
      creationTimestamp: null
      labels: {}
      name: ${NAME}${SUFFIX}
    spec:
      host: ${HOST}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      port:
        targetPort: ${NAME}-${API_PORT_DEFAULT_NAME}
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100
      wildcardPolicy: None
    status:
      ingress: null
  - apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    metadata:
      annotations: {}
      creationTimestamp: null
      labels: {}
      name: ${NAME}${SUFFIX}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
        apiVersion: apps.openshift.io/v1
      minReplicas: 1
      maxReplicas: 2
      metrics:
        - type: Resource
          resource:
            name: cpu
            target:
              type: Utilization
              averageUtilization: 80
